//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/sqlite"
)

var HeroImages = newHeroImagesTable("", "hero_images", "")

type heroImagesTable struct {
	sqlite.Table

	// Columns
	ID        sqlite.ColumnInteger
	Title     sqlite.ColumnString
	SubTitle  sqlite.ColumnString
	ImageURL  sqlite.ColumnString
	CreatedAt sqlite.ColumnTimestamp
	UpdatedAt sqlite.ColumnTimestamp

	AllColumns     sqlite.ColumnList
	MutableColumns sqlite.ColumnList
}

type HeroImagesTable struct {
	heroImagesTable

	EXCLUDED heroImagesTable
}

// AS creates new HeroImagesTable with assigned alias
func (a HeroImagesTable) AS(alias string) *HeroImagesTable {
	return newHeroImagesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new HeroImagesTable with assigned schema name
func (a HeroImagesTable) FromSchema(schemaName string) *HeroImagesTable {
	return newHeroImagesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new HeroImagesTable with assigned table prefix
func (a HeroImagesTable) WithPrefix(prefix string) *HeroImagesTable {
	return newHeroImagesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new HeroImagesTable with assigned table suffix
func (a HeroImagesTable) WithSuffix(suffix string) *HeroImagesTable {
	return newHeroImagesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newHeroImagesTable(schemaName, tableName, alias string) *HeroImagesTable {
	return &HeroImagesTable{
		heroImagesTable: newHeroImagesTableImpl(schemaName, tableName, alias),
		EXCLUDED:        newHeroImagesTableImpl("", "excluded", ""),
	}
}

func newHeroImagesTableImpl(schemaName, tableName, alias string) heroImagesTable {
	var (
		IDColumn        = sqlite.IntegerColumn("id")
		TitleColumn     = sqlite.StringColumn("title")
		SubTitleColumn  = sqlite.StringColumn("sub_title")
		ImageURLColumn  = sqlite.StringColumn("image_url")
		CreatedAtColumn = sqlite.TimestampColumn("created_at")
		UpdatedAtColumn = sqlite.TimestampColumn("updated_at")
		allColumns      = sqlite.ColumnList{IDColumn, TitleColumn, SubTitleColumn, ImageURLColumn, CreatedAtColumn, UpdatedAtColumn}
		mutableColumns  = sqlite.ColumnList{TitleColumn, SubTitleColumn, ImageURLColumn, CreatedAtColumn, UpdatedAtColumn}
	)

	return heroImagesTable{
		Table: sqlite.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		Title:     TitleColumn,
		SubTitle:  SubTitleColumn,
		ImageURL:  ImageURLColumn,
		CreatedAt: CreatedAtColumn,
		UpdatedAt: UpdatedAtColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
